name: Create Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Clojure Tools
        uses: DeLaGuardo/setup-clojure@13.2
        with:
          cli: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Uberjar
        run: |
          clojure -T:build uber

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: type-schema-jar
          path: target/type-schema.jar

  build-native:
    needs: build-jar
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-latest, macos-13]
        include:
          - os: ubuntu-latest
            platform: linux
            binary_name: type-schema-linux
          - os: ubuntu-24.04-arm
            platform: linux
            binary_name: type-schema-linux-arm64
          - os: windows-latest
            platform: windows
            binary_name: type-schema-windows
          - os: macos-latest
            platform: macos
            binary_name: type-schema-macos-arm64
          - os: macos-13
            platform: macos
            binary_name: type-schema-macos

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Jar Artifact
        uses: actions/download-artifact@v4
        with:
          name: type-schema-jar
          path: target/

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Install Linux Build Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential zlib1g-dev

      - name: Build Native Binary
        run: |
          native-image --no-fallback -jar target/type-schema.jar -o type-schema -H:Name=target/${{ matrix.binary_name }} -H:ReflectionConfigurationFiles=reflect-config.json --initialize-at-build-time --enable-url-protocols=https,http

      - name: Upload Native Binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: target/${{ matrix.binary_name }}

  create-release:
    needs: build-native
    runs-on: ubuntu-latest
    steps:
      - name: Download All Binaries
        uses: actions/download-artifact@v4
        with:
          path: /tmp/artifacts

      - name: Extract Artifacts
        run: |
          cd /tmp/artifacts
          for dir in */; do
            cd "$dir"
            unzip -q *.zip
            rm *.zip
            cd ..
          done

      - name: List Downloaded Files
        run: |
          ls -R /tmp/artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            /tmp/artifacts/type-schema-linux/type-schema-linux
            /tmp/artifacts/type-schema-linux-arm64/type-schema-linux-arm64
            /tmp/artifacts/type-schema-windows.exe/type-schema-windows.exe
            /tmp/artifacts/type-schema-macos-arm64/type-schema-macos-arm64
            /tmp/artifacts/type-schema-macos/type-schema-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}