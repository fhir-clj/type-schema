{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$comment": "$id: http://health-samurai.io/schemas/type-schema.schema.json/0.0.0.1",
  "type": "object",
  "title": "Type Schema",
  "description": "FHIR StructureDefinition & FHIR Schema view for generation SDK resource classes/types.",
  "definitions": {
    "type-schema-identifier": {
      "type": "object",
      "properties": {
        "kind": {
          "oneOf": [
            { "const": "primitive-type" },
            { "const": "valueset" },
            { "const": "complex-type" },
            { "const": "resource" },
            { "const": "nested" }
          ]
        },
        "package": { "type": "string" },
        "version": { "type": "string" },
        "name": { "type": "string", "description": "Computer friendly" },
        "url": {
          "type": "string",
          "pattern": "^(https?://|urn:)[^\\s]+$",
          "description": "A canonical URL to identifying this resource"
        }
      },
      "required": ["kind", "package", "version", "name", "url"],
      "additionalProperties": false
    },
    "with-primitive-type-kind": {
      "type": "object",
      "properties": {
        "kind": { "const": "primitive-type" }
      }
    },
    "with-valueset-kind": {
      "type": "object",
      "properties": {
        "kind": { "const": "valueset" }
      }
    },
    "with-complex-type-kind": {
      "type": "object",
      "properties": {
        "kind": { "const": "complex-type" }
      }
    },
    "with-resource-kind": {
      "type": "object",
      "properties": {
        "kind": { "const": "resource" }
      }
    },
    "with-nested-kind": {
      "type": "object",
      "properties": {
        "kind": { "const": "nested" }
      }
    },

    "field.*.binding": {
      "type": "object",
      "$comment": "https://build.fhir.org/terminologies-binding-examples.html",
      "properties": {
        "strength": {
          "type": "string",
          "enum": ["required", "extensible", "preferred", "example"]
        },
        "valueset": {
          "allOf": [
            { "$ref": "#/definitions/type-schema-identifier" },
            { "$ref": "#/definitions/with-valueset-kind" }
          ]
        }
      },
      "required": ["strength", "valueset"],
      "additionalProperties": false
    },

    "field.regular": {
      "title": "Regular field",
      "type": "object",
      "properties": {
        "required": { "type": "boolean", "default": false },
        "array": { "type": "boolean", "default": false },
        "type": {
          "$ref": "#/definitions/type-schema-identifier"
        },
        "binding": { "$ref": "#/definitions/field.*.binding" }
      },
      "required": ["type"],
      "additionalProperties": false
    },

    "field.polymorphic-declaration": {
      "title": "Polymorphic value[x] field declaration",
      "type": "object",
      "properties": {
        "required": { "type": "boolean", "default": false },
        "array": { "type": "boolean", "default": false },
        "choices": { "type": "array", "items": { "type": "string" } }
      },
      "required": ["choices"],
      "additionalProperties": false
    },

    "field.polymorphic-instance": {
      "title": "Polymorphic value[x] field instance",
      "type": "object",
      "$comment": "TODO: required, array consistency with field declaration (name in choiceOf).",
      "properties": {
        "choiceOf": { "type": "string" },
        "required": { "type": "boolean", "default": false },
        "array": { "type": "boolean", "default": false },
        "type": {
          "$ref": "#/definitions/type-schema-identifier"
        }
      },
      "required": ["type", "choiceOf"],
      "additionalProperties": false
    },

    "dependencies": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/type-schema-identifier"
      }
    }
  },

  "oneOf": [
    {
      "title": "Type Schema for Primitive Type",
      "type": "object",
      "properties": {
        "identifier": {
          "allOf": [
            { "$ref": "#/definitions/type-schema-identifier" },
            { "$ref": "#/definitions/with-primitive-type-kind" }
          ]
        },
        "description": {
          "type": "string"
        },
        "base": {
          "$ref": "#/definitions/type-schema-identifier"
        },
        "dependencies": { "$ref": "#/definitions/dependencies" }
      },
      "required": ["identifier", "base"],
      "additionalProperties": false
    },

    {
      "title": "Type Schema for ValueSet",
      "type": "object",
      "properties": {
        "identifier": {
          "allOf": [
            { "$ref": "#/definitions/type-schema-identifier" },
            { "$ref": "#/definitions/with-valueset-kind" }
          ]
        },
        "concept": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": { "type": "string" },
              "display": { "type": "string" },
              "system": { "type": "string" }
            },
            "required": ["code"],
            "additionalProperties": false
          }
        },
        "compose": { "type": "object" }
      },
      "required": ["identifier"],
      "additionalProperties": false
    },

    {
      "title": "Type Schema for Resource and Complex Type",
      "type": "object",
      "properties": {
        "identifier": {
          "allOf": [
            { "$ref": "#/definitions/type-schema-identifier" },
            {
              "oneOf": [
                { "$ref": "#/definitions/with-resource-kind" },
                { "$ref": "#/definitions/with-complex-type-kind" }
              ]
            }
          ]
        },
        "base": {
          "$ref": "#/definitions/type-schema-identifier"
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              { "$ref": "#/definitions/field.regular" },
              { "$ref": "#/definitions/field.polymorphic-declaration" },
              { "$ref": "#/definitions/field.polymorphic-instance" }
            ]
          }
        },
        "nested": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "identifier": {
                "allOf": [
                  { "$ref": "#/definitions/type-schema-identifier" },
                  { "$ref": "#/definitions/with-nested-kind" }
                ]
              },
              "base": {
                "$ref": "#/definitions/type-schema-identifier"
              },
              "fields": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    { "$ref": "#/definitions/field.regular" },
                    { "$ref": "#/definitions/field.polymorphic-declaration" },
                    { "$ref": "#/definitions/field.polymorphic-instance" }
                  ]
                }
              }
            },
            "required": ["identifier", "base"],
            "additionalProperties": false
          }
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/type-schema-identifier"
          }
        }
      },
      "required": ["identifier", "base"],
      "additionalProperties": false
    }
  ]
}
